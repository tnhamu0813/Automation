{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "2.0.0",
    "parameters": {
        "description": {
            "type": "string",
            "metadata": {
                "description": "description for the machine (because the name is generated)"
            }
        },
        "nameRole": {
            "type": "string",
            "allowedValues": [
                "AS", // app server
                "WS", // web server
                "DB", // database server
                "AX",
                "BS",
                "CN",
                "CW",
                "DC",
                "DS",
                "FS",
                "IS",
                "LB", //Load balancers and gateways
                "LX",
                "MS",
                "NS",
                "PA",
                "PS",
                "RA",
                "TS",
                "WA"
            ],
            "metadata": {
                "description": "role for the machine name"
            }
        },
        "nameSequence": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 999,
            "metadata": {
                "description": "sequence for the machine name (unique number for each VM in the resource group)"
            }
        },
        "nameSuffix": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 2,
            "metadata": {
                "description": "suffix for the machine name (not normally used - allows grouping machines on sequence number)"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "location of the resource"
            }
        },
        "operatingSystem": {
            "type": "string",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "defaultValue": "Windows",
            "metadata": {
                "description": "operating system (Windows, Linux)"
            }
        },
        "image": {
            "type": "string",
            "metadata": {
                "description": "platform/marketplace image (e.g. MicrosoftWindowsServer/WindowsServer/2012-R2-Datacenter) format: {publisher}/{offer}/{sku}/{version} (version defaults to 'latest' if omitted)"
            }
        },
        "size": {
            "type": "string",
            "defaultValue": "Basic_A1",
            "metadata": {
                "description": "performance level"
            }
        },
        "storageAccount": {
            "type": "string",
            "metadata": {
                "description": "storage account for all disks"
            }
        },
        "subnet": {
            "type": "string",
            "metadata": {
                "description": "subnet to attach to (can be in different resource group) format: {resource-group}/{vnet}/{subnet}"
            }
        },
        "ipAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "IP address for interface (blank = auto assigned)"
            }
        },
        "enableIPForwarding": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "enables ip forwarding for the network interface created for this vm"
            }
        },
        "loadBalancerPool": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "load balancer pool to put interface in (optional) format: {load-balancer-name}/{pool-name}"
            }
        },
        "dnsServers": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "list of DNS servers (optional array of strings)"
            }
        },
        "availabilitySet": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "availability set for fault tolerance (optional)"
            }
        },
        "osDiskSize": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "operating system disk size in GB (0 = use marketplace image size)"
            }
        },
        "dataDiskCount": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "number of data (non-os) disks"
            }
        },
        "dataDiskSize": {
            "type": "int",
            "defaultValue": 128,
            "metadata": {
                "description": "data (non-os) disk size in GB"
            }
        },
        "networkSecurityGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "network security group to use (optionally resource group name prefix) format: {resource-group}/{nsg}"
            }
        },
        "diagnosticsStorageAccount": {
            "type": "string",
            "defaultValue": "[parameters('storageAccount')]",
            "metadata": {
                "description": "storage account for diagnostics (defaults to storage account for disks)"
            }
        },
        "plan": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "marketplace plan (optional - only used by certain marketplace images) format: {publisher}/{product}/{name}/"
            }
        },
        "joinDomain": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "whether to domain join the machine (optional - defaults to true)"
            }
        },
        "enableDiagnostics": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "whether to install diagnostics extension (optional - defaults to true)"
            }
        },
        "enableAntimalware": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "whether to install antimalware extension (optional - defaults to true)"
            }
        }
    },
    "variables": {
        "apiVersion": "2016-06-01",
        "vmName": "[concat(resourceGroup().tags.NamingPrefix, parameters('nameRole'), padLeft(parameters('nameSequence'), 3, '0'), parameters('nameSuffix'))]",
        "convertToMaxPasswordLength": {
            "Windows": 127,
            "Linux": 72
        },
        "maxPasswordLength": "[variables('convertToMaxPasswordLength')[parameters('operatingSystem')]]",
        "nicName": "[concat(variables('vmName'), '-nic')]",
        "convertToDiagnosticsTemplate": {
            "true": "[concat(toLower(parameters('operatingSystem')), '-diagnostics.json')]",
            "false": "empty.json"
        },
        "diagnosticsTemplate": "[variables('convertToDiagnosticsTemplate')[string(parameters('enableDiagnostics'))]]",
        "convertToDiagnosticsParams": {
            "true": {
                "vm": { "value": "[variables('vmName')]" },
                "location": { "value": "[parameters('location')]" },
                "storageAccount": { "value": "[parameters('diagnosticsStorageAccount')]" }
            },
            "false": { }
        },
        "diagnosticsParams": "[variables('convertToDiagnosticsParams')[string(parameters('enableDiagnostics'))]]",
        "convertToJoinDomainTemplate": {
            "Windows": {
                "true": "windows-join-domain.json",
                "false": "empty.json"
            },
            "Linux": {
                "true": "empty.json",
                "false": "empty.json"
            }
        },
        "joinDomainTemplate": "[variables('convertToJoinDomainTemplate')[parameters('operatingSystem')][string(parameters('joinDomain'))]]",
        "convertToJoinDomainParams": {
            "Windows": {
                "true": {
                    "vm": { "value": "[variables('vmName')]" },
                    "location": { "value": "[parameters('location')]" }
                },
                "false": { }
            },
            "Linux": {
                "true": { },
                "false": { }
            }
        },
        "joinDomainParams": "[variables('convertToJoinDomainParams')[parameters('operatingSystem')][string(parameters('joinDomain'))]]",
        "convertToAntimalwareTemplate": {
            "Windows": {
                "true": "windows-antimalware.json",
                "false": "empty.json"
            },
            "Linux": {
                "true": "empty.json",
                "false": "empty.json"
            }
        },
        "antimalwareTemplate": "[variables('convertToAntimalwareTemplate')[parameters('operatingSystem')][string(parameters('enableAntimalware'))]]",
        "convertToAntimalwareParams": {
            "Windows": {
                "true": {
                    "vm": { "value": "[variables('vmName')]" },
                    "location": { "value": "[parameters('location')]" }
                },
                "false": { }
            },
            "Linux": {
                "true": { },
                "false": { }
            }
        },
        "antimalwareParams": "[variables('convertToAntimalwareParams')[parameters('operatingSystem')][string(parameters('enableAntimalware'))]]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "[take(concat(deployment().name, '-nic'), 64)]",
            "dependsOn": [ ],
            "properties": {
                "templateLink": {
                    "uri": "[uri(deployment().properties.templateLink.uri, 'network-interface.json')]"
                },
                "parameters": {
                    "name": { "value": "[variables('nicName')]" },
                    "location": { "value": "[parameters('location')]" },
                    "subnet": { "value": "[parameters('subnet')]" },
                    "ipAddress": { "value": "[parameters('ipAddress')]" },
                    "enableIPForwarding": { "value": "[parameters('enableIPForwarding')]" },
                    "networkSecurityGroup": { "value": "[parameters('networkSecurityGroup')]" },
                    "loadBalancerPool": { "value": "[parameters('loadBalancerPool')]" },
                    "dnsServers": { "value": "[parameters('dnsServers')]" }
                },
                "mode": "incremental"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "[take(concat(deployment().name, '-internal'), 64)]",
            "dependsOn": [ "[take(concat(deployment().name, '-nic'), 64)]" ],
            "properties": {
                "templateLink": {
                    "uri": "[uri(deployment().properties.templateLink.uri, 'virtual-machine-internal.json')]"
                },
                "parameters": {
                    "name": { "value": "[variables('vmName')]" },
                    "description": { "value": "[parameters('description')]" },
                    "location": { "value": "[parameters('location')]" },
                    "operatingSystem": { "value": "[parameters('operatingSystem')]" },
                    "image": { "value": "[parameters('image')]" },
                    "size": { "value": "[parameters('size')]" },
                    "storageAccount": { "value": "[parameters('storageAccount')]" },
                    "osDiskSize": { "value": "[parameters('osDiskSize')]" },
                    "dataDiskCount": { "value": "[parameters('dataDiskCount')]" },
                    "dataDiskSize": { "value": "[parameters('dataDiskSize')]" },
                    "availabilitySet": { "value": "[parameters('availabilitySet')]" },
                    "diagnosticsStorageAccount": { "value": "[parameters('diagnosticsStorageAccount')]" },
                    "networkInterface": { "value": "[variables('nicName')]" },
                    "adminUsername": { "value": "vm-admin" },
                    "adminPassword": { "value": "[take(listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount')), '2015-06-15').key1, variables('maxPasswordLength'))]" },
                    "plan": { "value": "[parameters('plan')]" }
                },
                "mode": "incremental"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "[take(concat(deployment().name, '-diagnostics'), 64)]",
            "dependsOn": [ "[take(concat(deployment().name, '-internal'), 64)]" ],
            "properties": {
                "templateLink": {
                    "uri": "[uri(deployment().properties.templateLink.uri, variables('diagnosticsTemplate'))]"
                },
                "parameters": "[variables('diagnosticsParams')]",
                "mode": "incremental"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "[take(concat(deployment().name, '-antimalware'), 64)]",
            "dependsOn": [ "[take(concat(deployment().name, '-internal'), 64)]" ],
            "properties": {
                "templateLink": {
                    "uri": "[uri(deployment().properties.templateLink.uri, variables('antimalwareTemplate'))]"
                },
                "parameters": "[variables('antimalwareParams')]",
                "mode": "incremental"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "[take(concat(deployment().name, '-join-domain'), 64)]",
            "dependsOn": [
                "[take(concat(deployment().name, '-internal'), 64)]",
                "[take(concat(deployment().name, '-diagnostics'), 64)]",
                "[take(concat(deployment().name, '-antimalware'), 64)]"
            ],
            "properties": {
                "templateLink": {
                    "uri": "[uri(deployment().properties.templateLink.uri, variables('joinDomainTemplate'))]"
                },
                "parameters": "[variables('joinDomainParams')]",
                "mode": "incremental"
            }
        }
    ]
}